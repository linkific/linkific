{
  "entities": {
    "ContactMessage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ContactMessage",
      "type": "object",
      "description": "Represents a message sent by a user through the contact form.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the contact message."
        },
        "name": {
          "type": "string",
          "description": "Name of the user sending the message."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user sending the message.",
          "format": "email"
        },
        "message": {
          "type": "string",
          "description": "The message content."
        },
        "sentAt": {
          "type": "string",
          "description": "Timestamp indicating when the message was sent.",
          "format": "date-time"
        },
        "page": {
          "type": "string",
          "description": "Page from which the message was sent (e.g., 'home', 'contact')."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "message",
        "sentAt",
        "page"
      ]
    },
    "JobApplication": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "JobApplication",
      "type": "object",
      "description": "Represents a job application submitted by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the job application."
        },
        "name": {
          "type": "string",
          "description": "Name of the applicant."
        },
        "email": {
          "type": "string",
          "description": "Email address of the applicant.",
          "format": "email"
        },
        "contactNumber": {
          "type": "string",
          "description": "Contact number of the applicant."
        },
        "role": {
          "type": "string",
          "description": "The role the user is applying for."
        },
        "reason": {
          "type": "string",
          "description": "The applicant's reason for wanting to join."
        },
        "resumeUrl": {
          "type": "string",
          "description": "The URL of the uploaded resume in Firebase Storage."
        },
        "submittedAt": {
          "type": "string",
          "description": "Timestamp indicating when the application was submitted.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "contactNumber",
        "role",
        "reason",
        "resumeUrl",
        "submittedAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/contactMessages/{contactMessageId}",
        "definition": {
          "entityName": "ContactMessage",
          "schema": {
            "$ref": "#/backend/entities/ContactMessage"
          },
          "description": "Stores contact messages received from the website's home and contact pages.",
          "params": [
            {
              "name": "contactMessageId",
              "description": "Unique identifier for the contact message."
            }
          ]
        }
      },
      {
        "path": "/jobApplications/{jobApplicationId}",
        "definition": {
          "entityName": "JobApplication",
          "schema": {
            "$ref": "#/backend/entities/JobApplication"
          },
          "description": "Stores job applications submitted through the careers page.",
          "params": [
            {
              "name": "jobApplicationId",
              "description": "Unique identifier for the job application."
            }
          ]
        }
      }
    ],
    "reasoning": "The data structure is designed to store contact messages and job applications. All messages are stored in a single collection, `/contactMessages`, and all applications in `/jobApplications`, to facilitate easy retrieval and display in the dashboard. This structure ensures that security rules can be applied uniformly to each data type. It also simplifies queries for displaying the data in the dashboard.\n\nThis design prioritizes simplicity and ease of management. No authorization checks are required for writes as the forms are public. Reads are restricted to authenticated users on the dashboard. Thus, authorization independence is not applicable in this scenario.\n\nQAPs: `list` operations are secure because the collections store data meant to be visible in the dashboard to authenticated employee users."
  }
}
