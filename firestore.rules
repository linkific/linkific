/**
 * @file Firestore Security Rules
 * @description This ruleset defines access control for the ContactMessage and JobApplication collections.
 *
 * Core Philosophy:
 *   This ruleset prioritizes simplicity and assumes that all contact messages and job applications
 *   are publicly submittable but only readable by authenticated users. No authorization checks are required for writes as the forms are public, reads are restricted to authenticated users on the dashboard.
 *
 * Data Structure:
 *   - /contactMessages/{contactMessageId}: Stores contact messages.
 *   - /jobApplications/{jobApplicationId}: Stores job applications.
 *
 * Key Security Decisions:
 *   - Contact messages and job applications can be created by anyone (public forms).
 *   - Only authenticated users can read (get/list) contact messages and job applications.
 *   - No updates or deletes are allowed via the client. These actions should be performed
 *     through a backend process with elevated privileges (e.g., Cloud Functions).
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to the contactMessages collection.
     * @path /contactMessages/{contactMessageId}
     * @allow (create) - Any user can submit a contact message.
     * @deny (get) - Unauthenticated users cannot read contact messages.
     * @principle Allows public creation of contact messages, but restricts read access to authenticated users.
     */
    match /contactMessages/{contactMessageId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to the jobApplications collection.
     * @path /jobApplications/{jobApplicationId}
     * @allow (create) - Any user can submit a job application.
     * @deny (get) - Unauthenticated users cannot read job applications.
     * @principle Allows public creation of job applications, but restricts read access to authenticated users.
     */
    match /jobApplications/{jobApplicationId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }

    // Helper function to determine if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }
  }
}